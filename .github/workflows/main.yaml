name: BAK Github Action

on:
  push:
    branch: 'develop'

jobs:
  build:
    name: Build test 'develop' code
    runs-on: ubuntu-latest

    if: ${{ !contains(github.event.head_commit.message, '!!') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: JDK Set up to 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'oracle'
          cache: 'gradle'

      - name: Gradlew
        run: chmod +x gradlew

      - name: Build gradle
        run: ./gradlew --warning-mode=all build
        env:
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_URL: ${{ secrets.DB_URL }}
          JWT_HEADER: ${{ secrets.JWT_HEADER }}
          JWT_PREFIX: ${{ secrets.JWT_PREFIX }}
          JWT_ACCESS_TOKEN_EXP: ${{ secrets.JWT_ACCESS_TOKEN_EXP }}
          JWT_REFRESH_TOKEN_EXP: ${{ secrets.JWT_REFRESH_TOKEN_EXP }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}

  merge:
    name: Merge branch 'develop' to 'main'
    runs-on: ubuntu-latest
    if: github.jobs.merge.result == "skipped" || github.jobs.merge.result == "success"

    steps:
      - name: Git remote update
        run: git remote update
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

      - name: Git change branch to 'main'
        run: git checkout main
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

      - name: Git set email
        run: git config --global user.email $EMAIL
        env:
          EMAIL: ${{ secrets.EMAIL }}

      - name: Git set name
        run: git config --global user.name $NAME
        env:
          NAME: ${{ secrets.NAME }}

      - name: Git merge 'develop' to 'main'
        run: git merge --allow-unrelated-histories develop
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

      - name: Git push 'main' branch
        run: git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}